package blir.engine.swing;

import blir.engine.game.Game;
import blir.engine.slot.Entity;
import blir.engine.slot.EntityType;

/**
 *
 * @author Travis
 */
public class GameGUI extends javax.swing.JFrame {

    private final Game game;
    private final GamePanel panel;

    /**
     * Creates new form GameGUI
     *
     * @param game
     */
    public GameGUI(Game game) {
        this.panel = new GamePanel(game);
        this.game = game;
        setContentPane(panel);
        initComponents();
        setTitle(game.name);
        setLocationRelativeTo(null);
    }

    public boolean isRunning() {
        return toggler.getState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        toggler = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                onMousePressed(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                onMouseDragged(evt);
            }
        });

        jMenu1.setText("Game");

        toggler.setText("Toggle");
        toggler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onToggle(evt);
            }
        });
        jMenu1.add(toggler);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onToggle(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onToggle
        new Thread(game).start();
    }//GEN-LAST:event_onToggle

    private int placeX, placeY;
    private int spawnID = EntityType.original.id;
    private boolean erase;


    private void onMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onMouseClicked
        int newX = (int) Math.round(evt.getX() / 15.00 - 1);
        int newY = (int) Math.round(evt.getY() / 15.00 - 4);
        if (newX >= 0 && newX < game.pixels() && newY >= 0 && newY < game.pixels()) {
            game.placeEntityAt(newY, newX,
                               game.getEntityAt(newY, newX) == null
                               ? new Entity(spawnID)
                               : null);
        }
        repaint();
    }//GEN-LAST:event_onMouseClicked

    private void onMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onMouseDragged
        int newX = (int) Math.round(evt.getX() / 15.00 - 1);
        int newY = (int) Math.round(evt.getY() / 15.00 - 4);

        if (newX < 0 || newX >= game.pixels() || newY < 0 || newY >= game.pixels()
            || (newX == placeX && newY == placeY) || (game.getEntityAt(newY, newX) == null == erase)) {
            return;
        }

        placeX = newX;
        placeY = newY;

        game.placeEntityAt(newY, newX, game.getEntityAt(newX, newY) == null ? new Entity(spawnID) : null);
        repaint();
    }//GEN-LAST:event_onMouseDragged

    private void onMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onMousePressed
        int newX = (int) Math.round(evt.getX() / 15.00 - 1);
        int newY = (int) Math.round(evt.getY() / 15.00 - 4);
        if (newX >= 0 && newX < game.pixels() && newY >= 0 && newY < game.pixels()) {
            erase = game.getEntityAt(newY, newX) != null;
        }
    }//GEN-LAST:event_onMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JCheckBoxMenuItem toggler;
    // End of variables declaration//GEN-END:variables
}
